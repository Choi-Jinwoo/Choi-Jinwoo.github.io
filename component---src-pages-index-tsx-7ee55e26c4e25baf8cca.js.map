{"version":3,"file":"component---src-pages-index-tsx-7ee55e26c4e25baf8cca.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/hooks/useAllPosts.ts","webpack://gatsby-starter-default/./src/components/EmptyPost/index.tsx","webpack://gatsby-starter-default/./src/components/Main/PostItem/index.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList/index.tsx","webpack://gatsby-starter-default/./src/utils/query.ts","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { GatsbyImageFluidProps } from 'gatsby-image';\n\nexport type Post = {\n  id: string;\n  slug: string;\n  frontmatter: {\n    date: string;\n    title: string;\n    description: string;\n    tags: string[];\n    thumbnail?: {\n      childImageSharp: GatsbyImageFluidProps;\n    };\n  };\n};\n\ntype AllPosts = {\n  allMdx: {\n    nodes: Post[];\n  };\n};\n\nconst useAllPosts = () => {\n  const data = useStaticQuery<AllPosts>(graphql`\n    query AllPosts {\n      allMdx(sort: { order: DESC, fields: frontmatter___date }) {\n        nodes {\n          id\n          slug\n          frontmatter {\n            date(formatString: \"YYYY.MM.DD.\")\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allMdx.nodes;\n};\n\nexport default useAllPosts;\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 40px;\n`;\n\nconst Title = styled.h1`\n  font-size: ${props => props.theme.sizes.medium};\n  text-align: center;\n  color: ${props => props.theme.colors.gray3};\n`;\n\ntype Props = {\n  searchKeyword: string;\n}\n\nconst EmptyPost = ({ searchKeyword }: Props) => {\n  return (\n    <Container>\n      <Title>{searchKeyword !== '' ? `'${searchKeyword}'에 대한 검색 결과가 없습니다` : '글이 작성되지 않았습니다'}</Title>\n    </Container>\n  )\n}\n\nexport default EmptyPost;","import React, { MouseEventHandler, useState } from 'react';\nimport { Link } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\nimport styled from 'styled-components';\nimport { Post } from '../../../hooks/useAllPosts';\nimport Tag from '../../Tag';\nimport useSiteMetaData from '../../../hooks/useSiteMetaData';\n\nconst Container = styled.article`\n  position: relative;\n  width: 360px;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n\n  @media ${props => props.theme.device.mobile} {\n    width: 100%;\n    height: auto;\n  }\n\n  &:hover .post-item-copy-button {\n    display: inherit;\n\n    @media ${props => props.theme.device.mobile} {\n      display: none;\n    }\n  }\n\n  &:hover .post-item-thumbnail {\n    transform: scale(1.1);\n\n    @media ${props => props.theme.device.mobile} {\n      transform: none;\n    }\n  }\n`;\n\nconst CopyButton = styled.button.attrs({ className: 'post-item-copy-button' })`\n  display: none;\n  position: absolute;\n  z-index: 2;\n  top: 12px;\n  right: 12px;\n  padding: 4px 8px;\n  border: none;\n  background-color: ${props => props.theme.colors.gray7}cc;\n  color: ${props => props.theme.colors.white};\n  font-size: ${props => props.theme.sizes.small};\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.gray6}cc;\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n  border-radius: 4px;\n`;\n\ntype ThumbnailProps = {\n  fluid: FluidObject | FluidObject[];\n};\n\nconst Thumbnail = styled(Image).attrs({\n  className: 'post-item-thumbnail',\n})<ThumbnailProps>`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: all 0.25s;\n`;\n\nconst PostInfoWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 0px;\n  box-sizing: border-box;\n  height: fit-content;\n`;\n\nconst PostContentWrapper = styled.div`\n  flex: 1;\n`;\n\nconst Tags = styled.div`\n  width: 100%;\n\n  & > * + * {\n    margin-left: 8px;\n  }\n`;\n\nconst Title = styled.h2<{\n  margin?: string;\n}>`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: ${props => props.theme.sizes.medium};\n  font-weight: bold;\n  margin: ${props => props.margin ?? '0'};\n`;\n\nconst Description = styled.p<{\n  margin?: string;\n}>`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  color: ${props => props.theme.colors.gray3};\n  text-overflow: ellipsis;\n  margin: ${props => props.margin ?? '0'};\n  font-size: ${props => props.theme.sizes.small};\n`;\n\nconst Date = styled.span`\n  font-size: ${props => props.theme.sizes.small};\n  color: ${props => props.theme.colors.gray4};\n`;\n\ntype Props = {\n  post: Post;\n};\n\nconst PostItem = ({ post }: Props) => {\n  const [isCopied, setIsCopied] = useState(false);\n  const { siteUrl } = useSiteMetaData();\n\n  const handleCopyURLClick: MouseEventHandler = e => {\n    e.preventDefault();\n    navigator.clipboard.writeText(`${siteUrl}/post/${post.slug}`);\n\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 3000);\n  };\n\n  const tagItems = post.frontmatter.tags.map((tag, index) => (\n    <Tag key={index} tag={tag} />\n  ));\n\n  return (\n    <Link to={`/post/${post.slug}`}>\n      <Container>\n        <CopyButton onClick={handleCopyURLClick}>{isCopied ? 'Copied' : 'Copy URL'}</CopyButton>\n        {post.frontmatter.thumbnail ?\n          <>\n            <ThumbnailWrapper>\n              <Thumbnail fluid={post.frontmatter.thumbnail.childImageSharp.fluid} />\n            </ThumbnailWrapper>\n            <PostInfoWrapper>\n              <PostContentWrapper>\n                <Tags>{tagItems}</Tags>\n                <Title margin='16px 0px 8px 0px'>{post.frontmatter.title}</Title>\n                <Description margin='0px 0px 8px 0px'>{post.frontmatter.description}</Description>\n              </PostContentWrapper>\n              <Date>{post.frontmatter.date}</Date>\n            </PostInfoWrapper>\n          </>\n          : <PostInfoWrapper>\n              <PostContentWrapper>\n                <Title margin='0px 0px 8px 0px'>{post.frontmatter.title}</Title>\n                <Description margin='8px 0px 16px 0px'>{post.frontmatter.description}</Description>\n                <Tags>{tagItems}</Tags>\n              </PostContentWrapper>\n              <Date>{post.frontmatter.date}</Date>\n            </PostInfoWrapper>\n        }\n      </Container>\n    </Link>\n  );\n};\n\nexport default PostItem;\n","import React, {useEffect, useState} from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport useAllPosts, { Post } from '../../../hooks/useAllPosts';\nimport { parseQuerystring } from '../../../utils/query';\nimport EmptyPost from '../../EmptyPost';\nimport PostItem from '../PostItem';\n\nconst postFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(80px);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n`;\n\nconst Container = styled.section`\n  margin-bottom: 80px\n`;\n\nconst SearchContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-bottom: 40px;\n`;\n\nconst SearchInput = styled.input`\n  border: 1px solid ${props => props.theme.colors.gray2};\n  background-color: ${props => props.theme.colors.gray0};\n  border-radius: 8px;\n  height: 32px;\n  padding: 4px 8px;\n  box-sizing: border-box;\n  width: 200px;\n  outline: none;\n  color: ${props => props.theme.colors.gray6};\n\n  &:focus {\n    border-color: ${props => props.theme.colors.gray3};\n  }\n`;\n\nconst PostContainer = styled.section`\n  display: grid;\n  row-gap: 48px;\n  animation: ${postFadeIn} 1s;\n\n  grid-template-columns: repeat(3, 1fr);\n  column-gap: calc((${props => props.theme.inner.desktop} - 360px * 3) / 2);\n  @media ${props => props.theme.device.tablet} {\n    column-gap: calc(${props => props.theme.inner.tablet} - 360px * 2);\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media ${props => props.theme.device.mobile} {\n    justify-items: center;\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n\nconst isMatchPost = (post: Post, keyword: string) => {\n  const { title, tags } = post.frontmatter;\n  if (title.toLowerCase().includes(keyword.toLowerCase())) return true;\n\n  return tags.some((tag) => tag.toLowerCase().includes(keyword.toLowerCase()));\n}\n\nconst SEARCH_KEYWORD_QUERY_KEY = 'q';\n\nconst PostList = () => {\n  const [searchKeyword, setSearchKeyword] = useState<string>('');\n  const posts = useAllPosts();\n\n  useEffect(() => {\n    const searchKeywordInQuerystring = parseQuerystring(location.search, SEARCH_KEYWORD_QUERY_KEY);\n    if (searchKeywordInQuerystring === null) return;\n\n    setSearchKeyword(searchKeywordInQuerystring);\n  }, []);\n\n  useEffect(() => {\n    // Sync querystring and searchKeyword state\n    history.pushState({}, null, `?${SEARCH_KEYWORD_QUERY_KEY}=${searchKeyword}`);\n  }, [searchKeyword])\n\n  const searchedPosts = searchKeyword !== '' ? posts.filter((post) => isMatchPost(post, searchKeyword)) : posts;\n\n  const postItems = searchedPosts.map(post => <PostItem key={post.id} post={post} />);\n\n  return (\n    <Container>\n      <SearchContainer>\n        <SearchInput placeholder='검색어를 입력하세요.' value={searchKeyword} onChange={({ target }) => setSearchKeyword(target.value)}/>\n      </SearchContainer>\n      {postItems.length > 0 ? (\n          <PostContainer>\n            {postItems}\n          </PostContainer> \n        ) : <EmptyPost searchKeyword={searchKeyword}/>}\n    </Container>\n  );\n};\n\nexport default PostList;\n","export const parseQuerystring = (search: string, key: string): string | null => {\n  const params = new URLSearchParams(search);\n\n  return params.get(key);\n}","import React from 'react';\nimport Layout from '../components/Layout';\nimport PostList from '../components/Main/PostList';\nimport useSiteMetaData from '../hooks/useSiteMetaData';\n\nconst IndexPage = () => {\n  const { description } = useSiteMetaData();\n\n  return (\n    <Layout path=\"/\" title=\"홈\" description={description}>\n      <PostList />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["useStaticQuery","allMdx","nodes","Container","styled","Title","props","theme","sizes","medium","colors","gray3","searchKeyword","device","mobile","CopyButton","className","gray7","white","small","gray6","ThumbnailWrapper","Thumbnail","Image","attrs","PostInfoWrapper","PostContentWrapper","Tags","margin","Description","Date","gray4","post","useState","isCopied","setIsCopied","siteUrl","useSiteMetaData","tagItems","frontmatter","tags","map","tag","index","Tag","key","Link","to","slug","onClick","e","preventDefault","navigator","clipboard","writeText","setTimeout","thumbnail","fluid","childImageSharp","title","description","date","postFadeIn","keyframes","SearchContainer","SearchInput","gray2","gray0","PostContainer","inner","desktop","tablet","setSearchKeyword","posts","useAllPosts","useEffect","search","searchKeywordInQuerystring","location","URLSearchParams","get","history","pushState","postItems","filter","keyword","toLowerCase","includes","some","isMatchPost","id","placeholder","value","onChange","target","length","Layout","path"],"sourceRoot":""}