{"version":3,"file":"component---src-pages-index-tsx-215b29bf42f01ea2dbdc.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/hooks/useAllPosts.ts","webpack://gatsby-starter-default/./src/components/Main/PostItem/index.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList/index.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { GatsbyImageFluidProps } from 'gatsby-image';\n\nexport type Post = {\n  id: string;\n  slug: string;\n  frontmatter: {\n    date: string;\n    title: string;\n    description: string;\n    tags: string[];\n    thumbnail: {\n      childImageSharp: GatsbyImageFluidProps;\n    };\n  };\n};\n\ntype AllPosts = {\n  allMdx: {\n    nodes: Post[];\n  };\n};\n\nconst useAllPosts = () => {\n  const data = useStaticQuery<AllPosts>(graphql`\n    query AllPosts {\n      allMdx(sort: { order: DESC, fields: frontmatter___date }) {\n        nodes {\n          id\n          slug\n          frontmatter {\n            date(formatString: \"YYYY.MM.DD.\")\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allMdx.nodes;\n};\n\nexport default useAllPosts;\n","import React, { MouseEventHandler } from 'react';\nimport { Link } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\nimport styled from 'styled-components';\nimport { Post } from '../../../hooks/useAllPosts';\nimport Tag from '../../Tag';\nimport useSiteMetaData from '../../../hooks/useSiteMetaData';\n\nconst Container = styled.article`\n  position: relative;\n  width: 360px;\n  height: 400px;\n\n  @media ${props => props.theme.device.mobile} {\n    width: 100%;\n    height: auto;\n  }\n\n  &:hover .post-item-copy-button {\n    display: inherit;\n\n    @media ${props => props.theme.device.mobile} {\n      display: none;\n    }\n  }\n\n  &:hover .post-item-thumbnail {\n    transform: scale(1.1);\n\n    @media ${props => props.theme.device.mobile} {\n      transform: none;\n    }\n  }\n`;\n\nconst CopyButton = styled.button.attrs({ className: 'post-item-copy-button' })`\n  display: none;\n  position: absolute;\n  z-index: 2;\n  top: 12px;\n  right: 12px;\n  padding: 8px 12px;\n  border: none;\n  background-color: ${props => props.theme.colors.gray1};\n  color: ${props => props.theme.colors.gray6};\n  font-size: ${props => props.theme.sizes.small};\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.gray2};\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n  border-radius: 4px;\n`;\n\ntype ThumbnailProps = {\n  fluid: FluidObject | FluidObject[];\n};\n\nconst Thumbnail = styled(Image).attrs({\n  className: 'post-item-thumbnail',\n})<ThumbnailProps>`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: all 0.25s;\n`;\n\nconst PostInfoWrapper = styled.div`\n  padding: 16px 0px;\n`;\n\nconst Tags = styled.div`\n  width: 100%;\n\n  & > * + * {\n    margin-left: 8px;\n  }\n`;\n\nconst Title = styled.h2`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: ${props => props.theme.sizes.medium};\n  font-weight: bold;\n  margin: 16px 0px 8px 0px;\n`;\n\nconst Description = styled.p`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  color: ${props => props.theme.colors.gray3};\n  text-overflow: ellipsis;\n  margin-bottom: 8px;\n  font-size: ${props => props.theme.sizes.small};\n`;\n\nconst Date = styled.span`\n  font-size: ${props => props.theme.sizes.small};\n  color: ${props => props.theme.colors.gray4};\n`;\n\ntype Props = {\n  post: Post;\n};\n\nconst PostItem = ({ post }: Props) => {\n  const { siteUrl } = useSiteMetaData();\n\n  const handleCopyURLClick: MouseEventHandler = e => {\n    e.preventDefault();\n    navigator.clipboard.writeText(`${siteUrl}/post/${post.slug}`);\n  };\n\n  const tagItems = post.frontmatter.tags.map((tag, index) => (\n    <Tag key={index} tag={tag} />\n  ));\n\n  return (\n    <Container>\n      <Link to={`/post/${post.slug}`}>\n        <CopyButton onClick={handleCopyURLClick}>Copy URL</CopyButton>\n        <ThumbnailWrapper>\n          <Thumbnail fluid={post.frontmatter.thumbnail.childImageSharp.fluid} />\n        </ThumbnailWrapper>\n\n        <PostInfoWrapper>\n          <Tags>{tagItems}</Tags>\n          <Title>{post.frontmatter.title}</Title>\n          <Description>{post.frontmatter.description}</Description>\n          <Date>{post.frontmatter.date}</Date>\n        </PostInfoWrapper>\n      </Link>\n    </Container>\n  );\n};\n\nexport default PostItem;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport useAllPosts from '../../../hooks/useAllPosts';\nimport PostItem from '../PostItem';\n\nconst postFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(80px);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n`;\n\nconst Container = styled.section`\n  display: grid;\n  row-gap: 20px;\n  animation: ${postFadeIn} 1s;\n\n  grid-template-columns: repeat(3, 1fr);\n  column-gap: calc((${props => props.theme.inner.desktop} - 360px * 3) / 2);\n  @media ${props => props.theme.device.tablet} {\n    column-gap: calc(${props => props.theme.inner.tablet} - 360px * 2);\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media ${props => props.theme.device.mobile} {\n    justify-items: center;\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n\nconst PostList = () => {\n  const posts = useAllPosts();\n\n  const postItems = posts.map(post => <PostItem key={post.id} post={post} />);\n\n  return <Container>{postItems}</Container>;\n};\n\nexport default PostList;\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport PostList from '../components/Main/PostList';\nimport useSiteMetaData from '../hooks/useSiteMetaData';\n\nconst IndexPage = () => {\n  const { description } = useSiteMetaData();\n\n  return (\n    <Layout path=\"/\" title=\"í™ˆ\" description={description}>\n      <PostList />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["useStaticQuery","allMdx","nodes","Container","styled","props","theme","device","mobile","CopyButton","className","colors","gray1","gray6","sizes","small","gray2","ThumbnailWrapper","Thumbnail","Image","attrs","PostInfoWrapper","Tags","Title","medium","Description","gray3","Date","gray4","post","siteUrl","useSiteMetaData","tagItems","frontmatter","tags","map","tag","index","Tag","key","Link","to","slug","onClick","e","preventDefault","navigator","clipboard","writeText","fluid","thumbnail","childImageSharp","title","description","date","postFadeIn","keyframes","inner","desktop","tablet","postItems","useAllPosts","id","Layout","path"],"sourceRoot":""}