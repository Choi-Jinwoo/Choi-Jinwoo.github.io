{"version":3,"file":"component---src-pages-index-tsx-fe9fbb5eac52502fbd3b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/hooks/useAllPosts.ts","webpack://gatsby-starter-default/./src/components/Main/PostGalleryView/PostGalleryItem/index.tsx","webpack://gatsby-starter-default/./src/components/Main/PostGalleryView/index.tsx","webpack://gatsby-starter-default/./src/components/Main/PostListView/PostListItem/index.tsx","webpack://gatsby-starter-default/./src/components/Main/PostListView/index.tsx","webpack://gatsby-starter-default/./src/components/Main/PostView/index.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-starter-default/./src/components/EmptyPost/index.tsx","webpack://gatsby-starter-default/./src/components/Main/PostContainer/index.tsx","webpack://gatsby-starter-default/./src/utils/query.ts","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { GatsbyImageFluidProps } from 'gatsby-image';\n\nexport type Post = {\n  id: string;\n  slug: string;\n  frontmatter: {\n    date: string;\n    title: string;\n    description: string;\n    tags: string[];\n    thumbnail?: {\n      childImageSharp: GatsbyImageFluidProps;\n    };\n  };\n};\n\ntype AllPosts = {\n  allMdx: {\n    nodes: Post[];\n  };\n};\n\nconst useAllPosts = () => {\n  const data = useStaticQuery<AllPosts>(graphql`\n    query AllPosts {\n      allMdx(sort: { order: DESC, fields: frontmatter___date }) {\n        nodes {\n          id\n          slug\n          frontmatter {\n            date(formatString: \"YYYY.MM.DD.\")\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allMdx.nodes;\n};\n\nexport default useAllPosts;\n","import React, { MouseEventHandler, useState } from 'react';\nimport { Link } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\nimport styled from 'styled-components';\nimport { Post } from '../../../../hooks/useAllPosts';\nimport Tag from '../../../Tag';\nimport useSiteMetaData from '../../../../hooks/useSiteMetaData';\n\nconst Container = styled.article`\n  position: relative;\n  width: 360px;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n\n  @media ${props => props.theme.device.mobile} {\n    height: auto;\n  }\n\n  &:hover .post-item-copy-button {\n    display: inherit;\n\n    @media ${props => props.theme.device.mobile} {\n      display: none;\n    }\n  }\n\n  &:hover .post-item-thumbnail {\n    transform: scale(1.1);\n\n    @media ${props => props.theme.device.mobile} {\n      transform: none;\n    }\n  }\n`;\n\nconst CopyButton = styled.button.attrs({ className: 'post-item-copy-button' })`\n  display: none;\n  position: absolute;\n  z-index: 2;\n  top: 12px;\n  right: 12px;\n  padding: 4px 8px;\n  border: none;\n  background-color: ${props => props.theme.colors.gray7}cc;\n  color: ${props => props.theme.colors.white};\n  font-size: ${props => props.theme.sizes.small};\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.gray6}cc;\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n  border-radius: 4px;\n`;\n\ntype ThumbnailProps = {\n  fluid: FluidObject | FluidObject[];\n};\n\nconst Thumbnail = styled(Image).attrs({\n  className: 'post-item-thumbnail',\n})<ThumbnailProps>`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: all 0.25s;\n`;\n\nconst PostInfoWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 0px;\n  box-sizing: border-box;\n  height: fit-content;\n`;\n\nconst PostContentWrapper = styled.div`\n  flex: 1;\n`;\n\nconst Tags = styled.div`\n  width: 100%;\n\n  & > * + * {\n    margin-left: 8px;\n  }\n`;\n\nconst Title = styled.h2<{\n  margin?: string;\n}>`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: ${props => props.theme.sizes.medium};\n  font-weight: bold;\n  margin: ${props => props.margin ?? '0'};\n`;\n\nconst Description = styled.p<{\n  margin?: string;\n}>`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  color: ${props => props.theme.colors.gray3};\n  text-overflow: ellipsis;\n  margin: ${props => props.margin ?? '0'};\n  font-size: ${props => props.theme.sizes.small};\n`;\n\nconst Date = styled.span`\n  font-size: ${props => props.theme.sizes.small};\n  color: ${props => props.theme.colors.gray4};\n`;\n\ntype Props = {\n  post: Post;\n};\n\nconst PostGalleryItem = ({ post }: Props) => {\n  const [isCopied, setIsCopied] = useState(false);\n  const { siteUrl } = useSiteMetaData();\n\n  const handleCopyURLClick: MouseEventHandler = e => {\n    e.preventDefault();\n    navigator.clipboard.writeText(`${siteUrl}/post/${post.slug}`);\n\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 3000);\n  };\n\n  const tagItems = post.frontmatter.tags.map((tag, index) => (\n    <Tag key={index} tag={tag} />\n  ));\n\n  return (\n    <Link to={`/post/${post.slug}`}>\n      <Container>\n        <CopyButton onClick={handleCopyURLClick}>\n          {isCopied ? 'Copied' : 'Copy URL'}\n        </CopyButton>\n        {post.frontmatter.thumbnail ? (\n          <>\n            <ThumbnailWrapper>\n              <Thumbnail\n                fluid={post.frontmatter.thumbnail.childImageSharp.fluid}\n              />\n            </ThumbnailWrapper>\n            <PostInfoWrapper>\n              <PostContentWrapper>\n                <Tags>{tagItems}</Tags>\n                <Title margin=\"16px 0px 8px 0px\">\n                  {post.frontmatter.title}\n                </Title>\n                <Description margin=\"0px 0px 8px 0px\">\n                  {post.frontmatter.description}\n                </Description>\n              </PostContentWrapper>\n              <Date>{post.frontmatter.date}</Date>\n            </PostInfoWrapper>\n          </>\n        ) : (\n          <PostInfoWrapper>\n            <PostContentWrapper>\n              <Title margin=\"0px 0px 8px 0px\">{post.frontmatter.title}</Title>\n              <Description margin=\"8px 0px 16px 0px\">\n                {post.frontmatter.description}\n              </Description>\n              <Tags>{tagItems}</Tags>\n            </PostContentWrapper>\n            <Date>{post.frontmatter.date}</Date>\n          </PostInfoWrapper>\n        )}\n      </Container>\n    </Link>\n  );\n};\n\nexport default PostGalleryItem;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PostGalleryItem from './PostGalleryItem';\nimport { BasePostViewProps } from '../PostView';\n\nconst postFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(80px);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n`;\n\nconst Container = styled.section`\n  display: grid;\n  row-gap: 48px;\n  animation: ${postFadeIn} 1s;\n\n  grid-template-columns: repeat(3, 1fr);\n  column-gap: calc((${props => props.theme.inner.desktop} - 360px * 3) / 2);\n  @media ${props => props.theme.device.tablet} {\n    column-gap: calc(${props => props.theme.inner.tablet} - 360px * 2);\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media ${props => props.theme.device.mobile} {\n    justify-items: center;\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n\ntype Props = {} & BasePostViewProps;\n\nconst PostGalleryView = ({ posts }: Props) => {\n  const postItems = posts.map(post => (\n    <PostGalleryItem key={post.id} post={post} />\n  ));\n\n  return <Container>{postItems}</Container>;\n};\n\nexport default PostGalleryView;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Image, { FluidObject } from 'gatsby-image';\nimport { Post } from '../../../../hooks/useAllPosts';\nimport Tag from '../../../Tag';\n\nconst Container = styled.article`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 40px 0;\n  border-bottom: 1px solid ${props => props.theme.colors.gray2};\n`;\n\nconst ContentWrapper = styled.div`\n  flex: 8;\n`;\n\nconst Title = styled.h2`\n  font-size: ${props => props.theme.sizes.medium};\n  font-weight: bold;\n  color: ${props => props.theme.colors.gray7};\n`;\n\nconst Date = styled.p`\n  font-size: ${props => props.theme.sizes.regular};\n  color: ${props => props.theme.colors.gray5};\n`;\n\nconst Description = styled.p`\n  font-size: ${props => props.theme.sizes.regular};\n  color: ${props => props.theme.colors.gray5};\n  margin-top: 4px;\n`;\n\nconst Tags = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst DateTagWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 16px;\n`;\n\nconst ThumbnailWrapper = styled.div`\n  flex: 2;\n  overflow: hidden;\n  border-radius: 4px;\n`;\n\nconst Thumbnail = styled(Image)<{\n  fluid: FluidObject | FluidObject[];\n}>`\n  width: 100%;\n  height: 100%;\n`;\n\ntype Props = {\n  post: Post;\n};\n\nconst PostListItem = ({ post }: Props) => {\n  const tagItems = post.frontmatter.tags.map((tag, index) => (\n    <Tag key={index} tag={tag} />\n  ));\n\n  return (\n    <Link to={`/post/${post.slug}`}>\n      <Container>\n        <ContentWrapper>\n          <Title>{post.frontmatter.title}</Title>\n          <Description>{post.frontmatter.description}</Description>\n          <DateTagWrapper>\n            <Date>{post.frontmatter.date}</Date>\n            <Tags>{tagItems}</Tags>\n          </DateTagWrapper>\n        </ContentWrapper>\n        {post.frontmatter.thumbnail ? (\n          <ThumbnailWrapper>\n            <Thumbnail\n              fluid={post.frontmatter.thumbnail.childImageSharp.fluid}\n            />\n          </ThumbnailWrapper>\n        ) : null}\n      </Container>\n    </Link>\n  );\n};\n\nexport default PostListItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BasePostViewProps } from '../PostView';\nimport PostListItem from './PostListItem';\n\nconst Container = styled.section``;\n\ntype Props = {} & BasePostViewProps;\n\nconst PostListView = ({ posts }: Props) => {\n  const postItems = posts.map(post => (\n    <PostListItem key={post.id} post={post} />\n  ));\n\n  return <Container>{postItems}</Container>;\n};\n\nexport default PostListView;\n","import React from 'react';\nimport { Post } from '../../../hooks/useAllPosts';\nimport PostGalleryView from '../PostGalleryView';\nimport PostListView from '../PostListView';\n\nexport type PostViewFormats = 'gallery' | 'list';\n\nexport type BasePostViewProps = {\n  posts: Post[];\n};\n\ntype Props = {\n  viewFormat: PostViewFormats;\n} & BasePostViewProps;\n\nconst viewFormat2ComponentMap: Record<\n  PostViewFormats,\n  React.FC<BasePostViewProps>\n> = {\n  gallery: PostGalleryView,\n  list: PostListView,\n};\n\nconst PostView = ({ viewFormat, ...basePostViewProps }: Props) => {\n  return viewFormat2ComponentMap[viewFormat]({\n    ...basePostViewProps,\n  });\n};\n\nexport default PostView;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 40px;\n`;\n\nconst Title = styled.h1`\n  font-size: ${props => props.theme.sizes.medium};\n  text-align: center;\n  color: ${props => props.theme.colors.gray3};\n`;\n\ntype Props = {\n  description: string;\n};\n\nconst EmptyPost = ({ description }: Props) => {\n  return (\n    <Container>\n      <Title>{description}</Title>\n    </Container>\n  );\n};\n\nexport default EmptyPost;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport useAllPosts, { Post } from '../../../hooks/useAllPosts';\nimport { parseQuerystring } from '../../../utils/query';\nimport PostView, { PostViewFormats } from '../PostView';\nimport EmptyPost from '../../EmptyPost';\n\nconst Container = styled.section`\n  margin-bottom: 80px;\n`;\n\nconst SearchContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 40px;\n  width: 100%;\n`;\n\nconst NumberOfPosts = styled.span`\n  font-size: ${props => props.theme.sizes.small};\n  color: ${props => props.theme.colors.gray5};\n  font-weight: bold;\n`;\n\nconst SearchInput = styled.input`\n  border: 1px solid ${props => props.theme.colors.gray2};\n  background-color: ${props => props.theme.colors.gray0};\n  border-radius: 8px;\n  height: 32px;\n  padding: 4px 8px;\n  box-sizing: border-box;\n  width: 200px;\n  outline: none;\n  color: ${props => props.theme.colors.gray6};\n\n  &:focus {\n    border-color: ${props => props.theme.colors.gray3};\n  }\n`;\n\nconst PostToolsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nconst ViewFormatButtonWrapper = styled.div`\n  display: flex;\n  algin-items: center;\n  gap: 8px;\n  margin: 12px 0;\n\n  .selected {\n    color: ${props => props.theme.colors.gray6};\n    background-color: ${props => props.theme.colors.gray2};\n    border: 1px solid ${props => props.theme.colors.gray3};\n  }\n`;\n\nconst ViewFormatButton = styled.button`\n  color: ${props => props.theme.colors.gray6};\n  background-color: ${props => props.theme.colors.gray1};\n  border: 1px solid ${props => props.theme.colors.gray2};\n  border-radius: 4px;\n  width: 60px;\n  height: 28px;\n  cursor: pointer;\n`;\n\nconst isMatchPost = (post: Post, keyword: string) => {\n  const { title, tags } = post.frontmatter;\n  if (title.toLowerCase().includes(keyword.toLowerCase())) return true;\n\n  return tags.some(tag => tag.toLowerCase().includes(keyword.toLowerCase()));\n};\n\nconst composeNumberOfPostsText = (prefix: string, numberOfPosts) => {\n  return `${prefix} (${numberOfPosts})`;\n};\n\nconst SEARCH_KEYWORD_QUERY_KEY = 'q';\n\nconst PostContainer = () => {\n  const [currentViewFormat, setCurrentViewFormat] =\n    useState<PostViewFormats>('list');\n  const [searchKeyword, setSearchKeyword] = useState<string>('');\n  const posts = useAllPosts();\n\n  useEffect(() => {\n    const searchKeywordInQuerystring = parseQuerystring(\n      location.search,\n      SEARCH_KEYWORD_QUERY_KEY\n    );\n    if (searchKeywordInQuerystring === null) return;\n\n    setSearchKeyword(searchKeywordInQuerystring);\n  }, []);\n\n  useEffect(() => {\n    // Sync querystring and searchKeyword state\n    if (searchKeyword === '') {\n      history.pushState({}, '', '/');\n    } else {\n      history.pushState(\n        {},\n        '',\n        `?${SEARCH_KEYWORD_QUERY_KEY}=${searchKeyword}`\n      );\n    }\n  }, [searchKeyword]);\n\n  const searchedPosts =\n    searchKeyword !== ''\n      ? posts.filter(post => isMatchPost(post, searchKeyword))\n      : posts;\n\n  return (\n    <Container>\n      <SearchContainer>\n        <NumberOfPosts>\n          {composeNumberOfPostsText(\n            searchKeyword === '' ? '전체 글' : `'${searchKeyword}' 검색 결과`,\n            searchedPosts.length\n          )}\n        </NumberOfPosts>\n        <PostToolsWrapper>\n          <ViewFormatButtonWrapper>\n            <ViewFormatButton\n              className={currentViewFormat === 'list' ? 'selected' : ''}\n              onClick={() => setCurrentViewFormat('list')}\n            >\n              List\n            </ViewFormatButton>\n            <ViewFormatButton\n              className={currentViewFormat === 'gallery' ? 'selected' : ''}\n              onClick={() => setCurrentViewFormat('gallery')}\n            >\n              Gallery\n            </ViewFormatButton>\n          </ViewFormatButtonWrapper>\n          <SearchInput\n            placeholder=\"검색어를 입력하세요.\"\n            value={searchKeyword}\n            onChange={({ target }) => setSearchKeyword(target.value)}\n          />\n        </PostToolsWrapper>\n      </SearchContainer>\n      {searchedPosts.length > 0 ? (\n        <PostView posts={searchedPosts} viewFormat={currentViewFormat} />\n      ) : (\n        <EmptyPost\n          description={\n            searchKeyword === ''\n              ? '작성된 글이 없습니다.'\n              : `'${searchKeyword}'에 대한 검색 결과가 없습니다`\n          }\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default PostContainer;\n","export const parseQuerystring = (search: string, key: string): string | null => {\n  const params = new URLSearchParams(search);\n\n  return params.get(key);\n}","import React from 'react';\nimport Layout from '../components/Layout';\nimport PostContainer from '../components/Main/PostContainer';\nimport useSiteMetaData from '../hooks/useSiteMetaData';\n\nconst IndexPage = () => {\n  const { description } = useSiteMetaData();\n\n  return (\n    <Layout path=\"/\" title=\"홈\" description={description}>\n      <PostContainer />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["useStaticQuery","allMdx","nodes","Container","styled","props","theme","device","mobile","CopyButton","className","colors","gray7","white","sizes","small","gray6","ThumbnailWrapper","Thumbnail","Image","attrs","PostInfoWrapper","PostContentWrapper","Tags","Title","medium","margin","Description","gray3","Date","gray4","post","useState","isCopied","setIsCopied","siteUrl","useSiteMetaData","tagItems","frontmatter","tags","map","tag","index","Tag","key","Link","to","slug","onClick","e","preventDefault","navigator","clipboard","writeText","setTimeout","thumbnail","fluid","childImageSharp","title","description","date","postFadeIn","keyframes","inner","desktop","tablet","postItems","posts","id","gray2","ContentWrapper","regular","gray5","DateTagWrapper","viewFormat2ComponentMap","gallery","PostGalleryView","list","viewFormat","basePostViewProps","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","SearchContainer","NumberOfPosts","SearchInput","gray0","PostToolsWrapper","ViewFormatButtonWrapper","ViewFormatButton","gray1","currentViewFormat","setCurrentViewFormat","searchKeyword","setSearchKeyword","useAllPosts","useEffect","search","searchKeywordInQuerystring","location","URLSearchParams","get","history","pushState","prefix","numberOfPosts","searchedPosts","filter","keyword","toLowerCase","includes","some","isMatchPost","placeholder","value","onChange","Layout","path"],"sourceRoot":""}